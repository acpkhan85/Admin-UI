@using Entity.SmartSchool
@model Entity.SmartSchool.TimeTableDto
@{
    List<ClassRoomDto> classList = (List<ClassRoomDto>)ViewBag.ClassList;
    SelectList classSelectList = new SelectList(classList.ToDictionary(k => k.ClassId, v => "Std - " + v.Standard + " | Div - " + v.Division), "Key", "Value");
}
<div class="right_col" role="main" style="min-height: 1160px;">
    <div class="">
        <div class="page-title">
            <div class="title_left">
                <h3>Time Table</h3>
            </div>
        </div>
        <div class="clearfix"></div>
        <div class="row">
            <div class="col-md-12 col-sm-12 col-xs-12">
                <div class="x_panel">
                    <div class="x_content">
                        @*<div class="row">
                                <button type="button" class="btn btn-sm btn-primary" data-toggle="modal" data-target=".bs-example-modal-lg"><i class="fa fa-plus"></i>&nbsp;Add Exam Time Table</button>
                            </div>*@
                        <div class="row">
                            <div class="btn-group">
                                <button type="button" class="btn btn-sm btn-primary" data-toggle="modal" data-target=".a"><i class="fa fa-plus"></i>&nbsp;Add Time Table</button>
                                <button type="button" class="btn btn-sm btn-primary" data-toggle="modal" data-target=".b"><i class="fa fa-plus"></i>&nbsp;Upload Time Table</button>
                            </div>
                        </div>
                        <div class="ln_solid"></div>
                        <form class="form-horizontal form-label-left input_mask">
                            <div class="form-group col-sm-4 col-xs-12">
                                <label class="control-label col-md-2 col-sm-2 col-xs-12">Class</label>
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @*<select class="form-control">
                                            <option>Choose class</option>
                                            <option>Class V</option>
                                            <option>Class VI</option>
                                            <option>Class VII</option>
                                            <option>Class VIII</option>
                                            <option>Class IX</option>
                                            <option>Class X</option>
                                        </select>*@
                                    @Html.DropDownListFor(model => model.ClassId, classSelectList, "Select", new { @class = "form-control col-md-7 col-xs-12", placeholder = "First Name" })
                                </div>
                            </div>
                            <div class="form-group col-md-4 col-sm-4 col-xs-12">
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    <button type="button" class="btn btn-sm btn-primary"><i class="fa fa-search"></i>&nbsp;Search</button>
                                </div>
                            </div>
                        </form>

                        <div class="row">
                            <div class="col-md-12 col-sm-12 col-xs-12">
                                <div class="x_panel">
                                    <div class="x_content">
                                        <div class="x_title">
                                            <h2>Time Table <small> Examtime Table</small></h2>
                                            <div class="clearfix"></div>
                                        </div>

                                        <table id="timetableTable" class="table table-striped table-bordered dataTable no-footer" role="grid" aria-describedby="datatable_info"></table>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade bs-example-modal-lg a" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
                <h4 class="modal-title" id="myModalLabel2">Add Exam Time Table</h4>
            </div>
            <div class="modal-body">
                @using (Ajax.BeginForm("SubmitTimeTable", "Class", null, new AjaxOptions { HttpMethod = "POST", OnSuccess = "ShowAlert" }, new { @class = "form-horizontal form-label-left" }))
                {
                    @Html.Hidden("SchoolId", (int)ViewBag.SchoolId)

                    <div class="form-group item">
                        <label class="control-label col-md-2 col-sm-1 col-xs-12">Class</label>
                        <div class="col-md-6 col-sm-6 col-xs-12">
                            @Html.DropDownListFor(model => model.ClassId, classSelectList, "Select", new { @class = "form-control col-md-7 col-xs-12", placeholder = "First Name" })
                        </div>
                        @Html.ValidationMessageFor(model => model.ClassId, null, new { @class = "alert" })
                    </div>

                    <div class="form-group item">
                        <label class="control-label col-md-2 col-sm-3 col-xs-12">From Time</label>
                        <div class="col-md-6 col-sm-6 col-xs-12">
                            <div class="input-group date" id="fromTime">
                                @Html.TextBoxFor(model => model.StartTime, new { @class = "form-control", placeholder = "From Time", @readonly = "readonly" })
                                <span class="input-group-addon">
                                    <span class="glyphicon glyphicon-calendar"></span>
                                </span>
                            </div>
                        </div>
                        @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "alert" })
                    </div>
                    <div class="form-group item">
                        <label class="control-label col-md-2 col-sm-3 col-xs-12">To Time</label>
                        <div class="col-md-6 col-sm-6 col-xs-12">
                            <div class="input-group date" id="toTime">
                                @Html.TextBoxFor(model => model.EndTime, new { @class = "form-control", placeholder = "To Time", @readonly = "readonly" })
                                <span class="input-group-addon">
                                    <span class="glyphicon glyphicon-calendar"></span>
                                </span>
                            </div>
                        </div>
                        @Html.ValidationMessageFor(model => model.EndTime, "", new { @class = "alert" })
                    </div>
                    <div class="form-group item">
                        <label class="control-label col-md-2 col-sm-1 col-xs-12">Mon</label>
                        <div class="col-md-6 col-sm-6 col-xs-12">
                            @Html.TextBoxFor(model => model.Mon, new { @class = "form-control col-md-7 col-xs-12", placeholder = "Mon" })
                        </div>
                        @Html.ValidationMessageFor(model => model.Mon, "", new { @class = "alert" })
                    </div>
                    <div class="form-group item">
                        <label class="control-label col-md-2 col-sm-3 col-xs-12">Tue</label>
                        <div class="col-md-6 col-sm-6 col-xs-12">
                            @Html.TextBoxFor(model => model.Tue, new { @class = "form-control col-md-7 col-xs-12", placeholder = "Tue" })
                        </div>
                        @Html.ValidationMessageFor(model => model.Tue, "", new { @class = "alert" })
                    </div>

                    <div class="form-group item">
                        <label class="control-label col-md-2 col-sm-1 col-xs-12">Wed</label>
                        <div class="col-md-6 col-sm-6 col-xs-12">
                            @Html.TextBoxFor(model => model.Wed, new { @class = "form-control col-md-7 col-xs-12", placeholder = "Wed" })
                        </div>
                        @Html.ValidationMessageFor(model => model.Wed, "", new { @class = "alert" })
                    </div>
                    <div class="form-group item">
                        <label class="control-label col-md-2 col-sm-3 col-xs-12">Thu</label>
                        <div class="col-md-6 col-sm-6 col-xs-12">
                            @Html.TextBoxFor(model => model.Thu, new { @class = "form-control col-md-7 col-xs-12", placeholder = "Thu" })
                        </div>
                        @Html.ValidationMessageFor(model => model.Thu, "", new { @class = "alert" })
                    </div>
                    <div class="form-group item">
                        <label class="control-label col-md-2 col-sm-3 col-xs-12">Fri</label>
                        <div class="col-md-6 col-sm-6 col-xs-12">
                            @Html.TextBoxFor(model => model.Fri, new { @class = "form-control col-md-7 col-xs-12", placeholder = "Fri" })
                        </div>
                        @Html.ValidationMessageFor(model => model.Fri, "", new { @class = "alert" })
                    </div>
                    <div class="form-group item">
                        <label class="control-label col-md-2 col-sm-3 col-xs-12">Sat</label>
                        <div class="col-md-6 col-sm-6 col-xs-12">
                            @Html.TextBoxFor(model => model.Sat, new { @class = "form-control col-md-7 col-xs-12", placeholder = "Sat" })
                        </div>
                        @Html.ValidationMessageFor(model => model.Sat, "", new { @class = "alert" })
                    </div>
                    <div class="form-group item">
                        <label class="control-label col-md-2 col-sm-3 col-xs-12">Sun</label>
                        <div class="col-md-6 col-sm-6 col-xs-12">
                            @Html.TextBoxFor(model => model.Sun, new { @class = "form-control col-md-7 col-xs-12", placeholder = "Sun" })
                        </div>
                        @Html.ValidationMessageFor(model => model.Sun, "", new { @class = "alert" })
                    </div>

                    <div class="ln_solid"></div>
                    <div class="form-group">
                        <div class="col-md-9 col-sm-9 col-xs-12 col-md-offset-2">
                            <button type="button" class="btn btn-default">Cancel</button>
                            <button type="submit" class="btn btn-primary">Submit</button>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<div class="modal fade bs-example-modal-lg b" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
                <h4 class="modal-title" id="myModalLabel2">Upload Excel Sheet for Time Table</h4>
            </div>
            <div class="modal-body">
                <div id="divUploadFileAdd">
                    <form enctype="multipart/form-data" id="frmUplaodFileAdd">

                        @Html.AntiForgeryToken()
                        <input id="fuPDFAdd" name="file" type="file" />
                        <input class="gbtn" id="btnUploadAdd" type="button" value="Upload" />
                        <label id="txtuploadedMsgAdd"> </label>

                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script>

        $('#fromTime').datetimepicker({
            format: 'hh:mm A',
            ignoreReadonly: true,
            allowInputToggle: true
        });
        $('#toTime').datetimepicker({
            format: 'hh:mm A',
            ignoreReadonly: true,
            allowInputToggle: true
        });


        $("#fuPDFAdd").change(function () {
            var file = this.files[0];
            fileName = file.name;
            size = file.size;
            type = file.type;
            if (type.toLowerCase() == "application/pdf") { //I just want pdf files and only want to show
                //upload button if it is of my desired type
                $("#txtuploadedMsgAdd").text("");
                $("#btnUploadAdd").show();
            }
            else {
                $("#txtuploadedMsgAdd").text("Error: Please select pdf file.");
                $("#btnUploadAdd").hide();
                $("#divAddInforamtionDialog").hide();
            }
        });

        $("#btnUploadAdd").click(function () {

            var formData = new FormData($('#frmUplaodFileAdd')[0]);
            $.ajax({
                url: '/class/AsynFileUpload',  //Server script to process data
                type: 'POST',
                xhr: function () {  // Custom XMLHttpRequest
                    var myXhr = $.ajaxSettings.xhr();
                    if (myXhr.upload) { // Check if upload property exists
                        myXhr.upload.addEventListener('progress',
                        progressHandlingFunction, false); // For handling the progress of the upload
                    }
                    return myXhr;
                },
                data: formData,
                //Options to tell jQuery not to process data or worry about content-type.
                cache: false,
                contentType: false,
                processData: false
            });
        });

        //If file is successfully uploaded, label is updated with message
        function progressHandlingFunction(e) {
            if (e.lengthComputable) {
                $("#divAddInforamtionDialog").show();
                $("#txtuploadedMsgAdd").text("  " + fileName + " uploaded successfully");
            }
        }

    </script>
    <script src="~/Scripts/CustomJs/ClassRoom.js"></script>
}